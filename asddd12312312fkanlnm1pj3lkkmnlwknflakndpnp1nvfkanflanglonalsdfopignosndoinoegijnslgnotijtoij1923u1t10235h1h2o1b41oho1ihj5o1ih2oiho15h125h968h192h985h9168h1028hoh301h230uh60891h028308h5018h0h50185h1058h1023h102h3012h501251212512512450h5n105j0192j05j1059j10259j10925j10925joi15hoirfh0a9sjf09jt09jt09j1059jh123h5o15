--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v71=0;local v72;while true do if (v71==0) then v72=v2(v0(v30,16));if v19 then local v101=v5(v72,v19);v19=nil;return v101;else return v72;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v73=(1448 -(287 + 1161)) + 0 ;local v74;while true do if (0==v73) then v74=(v31/((194 -((73 -31) + 150))^(v32-(1 + 0))))%((919 -((17 -10) + 910))^(((v33-(255 -(85 + 76 + 93))) -(v32-((1096 -(255 + 387)) -(450 + 3)))) + (1 -0))) ;return v74-(v74%(1 -0)) ;end end else local v75=2^(v32-(1 + 0)) ;return (((v31%(v75 + v75))>=v75) and (686 -(393 + 292))) or (0 + 0) ;end end local function v21()local v34=0 -0 ;local v35;while true do if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + ((1904 -(921 + 981)) -1) ;v34=3 -(2 -0) ;end if (v34==1) then return v35;end end end local function v22()local v36=0 + 0 ;local v37;local v38;while true do if ((0 -0)==v36) then v37,v38=v1(v16,v18,v18 + 2 + (427 -(117 + 310)) );v18=v18 + (5 -3) ;v36=1;end if (v36==(1 -0)) then return (v38 * (594 -(1216 -878))) + v37 ;end end end local function v23()local v39,v40,v41,v42=v1(v16,v18,v18 + 1 + (624 -(112 + 510)) );v18=v18 + (366 -(237 + 125)) ;return (v42 * (49019654 -32242438)) + (v41 * (65707 -(169 + 2))) + (v40 * (33 + (301 -78))) + v39 ;end local function v24()local v43=182 -(152 + 30) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==1) then v46=603 -(17 + 364 + 221) ;v47=(v20(v45,1900 -(158 + 1741) ,20) * (2^(839 -(771 + 36)))) + v44 ;v43=2;end if (v43==(14 -11)) then if (v48==(0 + 0 + 0)) then if (v47==(0 + 0)) then return v49 * (947 -(163 + 784)) ;else local v102=940 -(722 + 218) ;while true do if (v102==(481 -(261 + 220))) then v48=1;v46=443 -(187 + 246 + 10) ;break;end end end elseif (v48==((2940 + 1150) -2043)) then return ((v47==(0 -(0 + 0))) and (v49 * (1/(633 -(249 + 384))))) or (v49 * NaN) ;end return v8(v49,v48-((874 + 1264) -(823 + 292)) ) * (v46 + (v47/(2^(50 + 2)))) ;end if (v43==(1338 -(1207 + 129))) then v48=v20(v45,11 + 10 ,31);v49=((v20(v45,23 + 9 )==((160 -(95 + 64)) -0)) and  -((2 -1) -0)) or (3 -2) ;v43=1701 -(725 + 973) ;end if (v43==(393 -(387 + 6))) then v44=v23();v45=v23();v43=(410 -(208 + 201)) + 0 ;end end end local function v25(v50)local v51;if  not v50 then v50=v23();if (v50==0) then return "";end end v51=v3(v16,v18,(v18 + v50) -(671 -(457 + 213)) );v18=v18 + v50 ;local v52={};for v69=481 -(144 + 336) , #v51 do v52[v69]=v2(v1(v3(v51,v69,v69)));end return v6(v52);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v53==(0 -0)) then v54=0 -0 ;v55=nil;v53=1 + 0 ;end if (v53~=1) then else v56=nil;v57=nil;v53=1137 -(124 + 1011) ;end if ((1 + 1)==v53) then v58=nil;v59=nil;v53=446 -(117 + 326) ;end if (v53~=4) then else while true do if (v54~=(0 + 0)) then else local v94=0 + 0 ;while true do if (v94==1) then v54=1;break;end if (v94==(0 -0)) then v55=0;v56=nil;v94=1;end end end if (v54==3) then v61=nil;while true do if (v55==2) then for v114=2 -1 ,v60 do local v115=0 -0 ;local v116;local v117;local v118;while true do if ((1462 -(114 + 1347))==v115) then v118=nil;while true do if (0~=v116) then else local v130=0 -0 ;while true do if (v130~=(1533 -(1117 + 416))) then else v117=v21();v118=nil;v130=1240 -(123 + 1116) ;end if (v130==(1 -0)) then v116=1 -0 ;break;end end end if (v116==(1376 -(882 + 493))) then if (v117==(914 -(857 + 56))) then v118=v21()~=0 ;elseif (v117==2) then v118=v24();elseif (v117~=(1178 -(75 + 1100))) then else v118=v25();end v61[v114]=v118;break;end end break;end if (v115~=(0 -0)) then else v116=0;v117=nil;v115=1 + 0 ;end end end v59[8 -5 ]=v21();for v119=486 -(379 + 106) ,v23() do local v120=1421 -(223 + 1198) ;local v121;local v122;local v123;while true do if ((2 -1)==v120) then v123=nil;while true do if (v121==1) then while true do if (v122==(202 -(66 + 136))) then v123=v21();if (v20(v123,2 -1 ,3 -2 )~=0) then else local v134=0;local v135;local v136;local v137;local v138;local v139;while true do if (v134==0) then v135=1119 -(751 + 368) ;v136=nil;v134=1;end if (v134==1) then v137=nil;v138=nil;v134=6 -4 ;end if (v134==(1895 -(130 + 1763))) then v139=nil;while true do if (v135==(1283 -(1097 + 184))) then while true do if (v136==(1390 -(1215 + 174))) then local v272=0 + 0 ;while true do if (v272==(1 + 0)) then v136=3 -1 ;break;end if (v272~=(1334 -(113 + 1221))) then else v139={v22(),v22(),nil,nil};if (v137==(1206 -(352 + 854))) then local v297=1649 -(582 + 1067) ;local v298;while true do if (v297==0) then v298=0;while true do if (v298==0) then v139[2 + 1 ]=v22();v139[17 -13 ]=v22();break;end end break;end end elseif (v137==(1 + 0)) then v139[1545 -(1345 + 197) ]=v23();elseif (v137==(1 + 1)) then v139[1873 -(738 + 1132) ]=v23() -((629 -(470 + 157))^(8 + 8)) ;elseif (v137==3) then local v323=0 + 0 ;local v324;while true do if (v323~=0) then else v324=0;while true do if (v324~=(0 + 0)) then else v139[301 -(57 + 241) ]=v23() -(2^(1302 -(44 + 1242))) ;v139[14 -10 ]=v22();break;end end break;end end end v272=1;end end end if (v136==(0 -0)) then local v273=1549 -(659 + 890) ;while true do if (v273==(0 + 0)) then local v296=0 -0 ;while true do if (0~=v296) then else v137=v20(v123,2,7 -4 );v138=v20(v123,10 -6 ,1542 -(1382 + 154) );v296=2 -1 ;end if (v296==(1874 -(1363 + 510))) then v273=334 -(106 + 227) ;break;end end end if (v273~=1) then else v136=976 -(31 + 944) ;break;end end end if (v136==3) then if (v20(v138,2 + 1 ,3 + 0 )==(1757 -(1599 + 157))) then v139[4]=v61[v139[4 + 0 ]];end v56[v119]=v139;break;end if (v136==2) then local v275=1113 -(382 + 731) ;local v276;while true do if (v275==(0 -0)) then v276=0 + 0 ;while true do if (v276==(0 + 0)) then if (v20(v138,3 -2 ,1)==(288 -(175 + 112))) then v139[3 -1 ]=v61[v139[1 + 1 ]];end if (v20(v138,323 -(217 + 104) ,7 -5 )==(1 + 0)) then v139[2 + 1 ]=v61[v139[14 -11 ]];end v276=1 + 0 ;end if (v276==(1 -0)) then v136=2 + 1 ;break;end end break;end end end end break;end if ((0 + 0)~=v135) then else v136=0;v137=nil;v135=1;end if ((1234 -(940 + 293))~=v135) then else local v254=964 -(9 + 955) ;while true do if (0==v254) then v138=nil;v139=nil;v254=1;end if (v254==1) then v135=1083 -(1074 + 7) ;break;end end end end break;end end end break;end end break;end if (v121~=(0 -0)) then else v122=1755 -(36 + 1719) ;v123=nil;v121=1;end end break;end if (v120==(0 -0)) then local v126=18 -(9 + 9) ;while true do if (v126==(83 -(42 + 40))) then v120=1 + 0 ;break;end if (v126==(0 -0)) then v121=0 + 0 ;v122=nil;v126=1 + 0 ;end end end end end v55=2 + 1 ;end if (v55==(0 + 0)) then local v108=1939 -(259 + 1680) ;local v109;while true do if (v108==0) then v109=1491 -(635 + 856) ;while true do if (v109==(0 -0)) then local v128=0;while true do if ((0 -0)==v128) then v56={};v57={};v128=1;end if ((1732 -(261 + 1470))==v128) then v109=116 -(114 + 1) ;break;end end end if (v109~=(2 -1)) then else v58={};v55=1 -0 ;break;end end break;end end end if (v55==(1 + 0)) then local v110=0 -0 ;local v111;while true do if (v110==(0 -0)) then v111=0 + 0 ;while true do if (0==v111) then local v129=0 -0 ;while true do if ((1 -0)~=v129) then else v111=2 -1 ;break;end if (v129~=(0 -0)) then else v59={v56,v57,nil,v58};v60=v23();v129=1;end end end if (v111~=(1591 -(89 + 1501))) then else v61={};v55=6 -4 ;break;end end break;end end end if (v55~=(8 -5)) then else local v112=0 -0 ;local v113;while true do if (v112~=(0 -0)) then else v113=0 + 0 ;while true do local v127=0;while true do if ((933 -(377 + 556))~=v127) then else if (v113==1) then return v59;end if ((0 + 0)==v113) then local v132=170 -(154 + 16) ;while true do if (v132~=(87 -(52 + 34))) then else v113=1 -0 ;break;end if (v132==(0 -0)) then for v142=1,v23() do v57[v142-(1 + 0) ]=v28();end for v144=1 + 0 ,v23() do v58[v144]=v23();end v132=3 -2 ;end end end break;end end end break;end end end end break;end if (v54==(1 -0)) then local v95=0 -0 ;while true do if (v95==1) then v54=2 + 0 ;break;end if (v95==(172 -(32 + 140))) then v57=nil;v58=nil;v95=2 -1 ;end end end if (v54~=(340 -(132 + 206))) then else v59=nil;v60=nil;v54=4 -1 ;end end break;end if (v53==(103 -(60 + 40))) then v60=nil;v61=nil;v53=4 + 0 ;end end end local function v29(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==1) then v68=v62[3];return function(...)local v79=1;local v80= -1;local v81={...};local v82=v12("#",...) -1 ;local function v83()local v84=v66;local v85=v67;local v86=v68;local v87=v27;local v88={};local v89={};local v90={};for v96=0 + (0 -0) ,v82 do if (((1779 + 1734)<(1529 + 2253)) and (v96>=v86)) then v88[v96-v86 ]=v81[v96 + ((2070 -(356 + 977)) -(303 + 433)) ];else v90[v96]=v81[v96 + (1071 -(31 + 1039)) ];end end local v91=(v82-v86) + (1 -0) ;local v92;local v93;while true do local v97=(0 -0) + 0 ;local v98;while true do if ((v97==(0 + 0 + 0)) or (1434<=((350 -(51 + 91)) -104))) then v98=0 + 0 ;while true do if ((1185>=(1027 -(30 + 129))) and (v98==(219 -(115 + 104)))) then local v124=1254 -(283 + 971) ;local v125;while true do if (((3635 + 287)>=(4406 -(1512 + 26))) and (0==v124)) then v125=0 + 0 ;while true do if (((1967 -(107 + 934))<(1551 -(78 + 7))) and (v125==0)) then local v133=(0 -0) -0 ;while true do if ((v133==(919 -(329 + 589))) or (1608>=((3258 -(413 + 923)) + 1292))) then v125=1 + 0 ;break;end if (((3279 -(108 + 322))==(3476 -(132 + 495))) and (v133==(0 + 0 + 0))) then v92=v84[v79];v93=v92[1];v133=(1724 -(973 + 748)) -2 ;end end end if (((2197 + 176)<=3094) and (v125==(1612 -(187 + 1424)))) then v98=1;break;end end break;end end end if (((1793 -(414 + 1378))==v98) or ((1996 + 2958)<(1217 + 139))) then if (((10992 -7407)>=(4056 -2103)) and (v93<=(4 + 12))) then if (((63 + 3843)>=(2121 -(182 + 357 + 77))) and (v93<=(2 + 5))) then if (((11502 -7652)>=2061) and (v93<=(260 -(256 + 1)))) then if (((5103 -(10182 -6648))>(2258 -(689 + (1998 -(420 + 1148))))) and (v93<=(1 + 0))) then if (((3347 -(399 + 665))<=3098) and (v93==(0 + 0))) then v90[v92[1 + (518 -(374 + 143)) ]]=v63[v92[10 -7 ]];elseif (v90[v92[1121 -(623 + 496) ]] or ((4461 -(683 + 949))>(13404 -9302))) then v79=v79 + 1 ;else v79=v92[300 -(228 + 69) ];end elseif (((740 + 412)<(2312 + 177)) and (v93>(1 + 1))) then local v148=0 + 0 ;local v149;local v150;local v151;local v152;while true do if (((51 + 4493)>=(552 + 292)) and (v148==2)) then for v238=v149,v80 do local v239=(493 + 306) -(632 + 167) ;local v240;while true do if ((v239==(0 + (0 -0))) or ((7 + 74)>(6807 -3870))) then v240=0 + 0 ;while true do if (((5599 -3878)<=2245) and (v240==(0 + 0))) then v152=v152 + (88 -(26 + 61)) ;v90[v238]=v150[v152];break;end end break;end end end break;end if (((631 + (4914 -2909))>=(10830 -8423)) and (v148==(217 -(156 + 60)))) then local v225=0;while true do if (((4755 -(109 + 25 + 108))>=(1082 + 2202)) and (1==v225)) then v148=2 -0 ;break;end if ((v225==0) or ((6225 -2638)>(4541 -(30 + 225 + 307)))) then v80=(v151 + v149) -(3 -(1 + 1)) ;v152=0 + 0 + 0 ;v225=3 -(1164 -(224 + 938)) ;end end end if ((481>(1484 -(160 + 1305))) and (v148==(0 -(0 -0)))) then v149=v92[1 + 1 ];v150,v151=v87(v90[v149](v90[v149 + (1429 -(134 + 1294)) ]));v148=1;end end else v90[v92[(1281 -(558 + 102)) -(169 + 450) ]][v90[v92[3 + 0 ]]]=v92[898 -(298 + 596) ];end elseif ((v93<=(10 -5)) or ((5630 -3968)<(1175 -(259 + 185)))) then if ((v93>(3 + 1)) or ((388 + 8)>(5035 -(86 + 78)))) then v90[v92[5 -3 ]]();else for v205=v92[2 -0 ],v92[7 -(11 -7) ] do v90[v205]=nil;end end elseif ((v93==(10 -4)) or ((2884 -(1428 + 404))>=((1094 + 98) -(13 + 31)))) then local v155=0 -(1878 -(1491 + 387)) ;local v156;local v157;while true do if (((525 -408)<=4813) and (v155==(0 -0))) then v156=v92[7 -5 ];v157={};v155=1 + 0 ;end if ((v155==(1 -0)) or (((14156 -(546 + 116)) -10216)==(4481 -(766 + 946)))) then for v241=600 -(431 + 168) , #v89 do local v242=0 -0 ;local v243;local v244;local v245;while true do if ((v242==(1646 -(741 + 905))) or ((671 + 3889)<=(3135 -(166 + 331)))) then v243=0 -0 ;v244=nil;v242=1 + 0 ;end if ((v242==1) or ((2726 + 1635)==(2358 + (2559 -(1842 + 19))))) then v245=nil;while true do if ((v243==(1 + 0)) or (2915>=(355 + 3663))) then while true do if ((v244==(0 + (97 -(8 + 89)))) or ((1394 -598)>4752)) then v245=v89[v241];for v302=0 -0 , #v245 do local v303=0 -0 ;local v304;local v305;local v306;local v307;while true do if ((v303==(14 -(12 + 1))) or ((4962 -(698 + 395))>(6477 -(1192 + 607)))) then local v317=0 + 0 + 0 ;while true do if ((v317==(1 + 0)) or ((2036 -((1074 -382) + (1737 -(644 + 287))))==828)) then v303=3 -1 ;break;end if ((v317==(624 -(131 + 493))) or (4664<(3557 -(610 + 793)))) then v306=nil;v307=nil;v317=1;end end end if (((295 + 558)<(2402 + 255)) and ((947 -(47 + 60 + 467 + 371))==v303)) then while true do if (((767 + 1015)<=(11944 -7392)) and (v304==(385 -(289 + 95)))) then v307=v305[2];if (((v306==v90) and (v307>=v156)) or (604>=(4062 -(1297 + 141)))) then local v329=1064 -(508 + 556) ;local v330;local v331;while true do if (((2195 -(237 + 11 + 596))<1807) and (v329==(1 -0))) then while true do if ((v330==0) or ((991 -394)==(80 -49))) then v331=0;while true do if ((v331==(1851 -(1631 + 220))) or ((2955 -1500)>((1168 -382) + 2296))) then v157[v307]=v306[v307];v305[1 + (1920 -(541 + 1379)) ]=v157;break;end end break;end end break;end if ((v329==(0 -0)) or ((6340 -(1586 + 60))<=269)) then v330=0 + 0 ;v331=nil;v329=190 -((426 -301) + 64) ;end end end break;end if ((767<(11631 -9120)) and (v304==(0 + 0))) then local v327=0 + 0 ;local v328;while true do if (((11157 -(2897 + 4026))<4511) and (v327==(0 + 0))) then v328=(0 + 0) -0 ;while true do if ((622<2933) and ((35 -(7 + 27))==v328)) then v304=1 + 0 ;break;end if (((6113 -(990 + 589))==(1938 + 2596)) and (v328==(0 + 0))) then v305=v245[v302];v306=v305[1];v328=319 -(23 + 295) ;end end break;end end end end break;end if ((v303==((1464 -(460 + 119)) -(870 + 15))) or ((5398 -(403 + 768))<(6941 -3622))) then local v318=(0 -0) + 0 ;while true do if (((3684 + 823)>=((1727 -(261 + 465)) + 1699)) and (v318==(363 -(253 + 110)))) then v304=1266 -(905 + 361) ;v305=nil;v318=1;end if (((7531 -5252)<((5492 -(388 + 95)) -(462 + 284))) and (v318==1)) then v303=2 -1 ;break;end end end end end break;end end break;end if (((1577 + 1713)>(576 + 968)) and (v243==(0 -0))) then local v290=0 + (1366 -(964 + 402)) ;while true do if (((4886 -(1225 + 396))<=4810) and (v290==(2 -1))) then v243=1;break;end if (((12797 -8460)>(10104 -(14253 -7794))) and (v290==(0 -0))) then v244=0;v245=nil;v290=1;end end end end break;end end end break;end end else local v158=(0 -0) -0 ;local v159;local v160;local v161;local v162;while true do if ((v158==0) or (3586>=4117)) then local v228=0 + 0 ;while true do if ((v228==((1392 -(614 + 777)) + 0)) or ((38 + 1405)<=(809 -(36 + 558)))) then v158=1;break;end if (((0 -0)==v228) or ((2498 -(1562 + 378))>=(4077 -3016))) then v159=v92[2];v160,v161=v87(v90[v159](v13(v90,v159 + ((3071 -(808 + 802)) -(1332 + 128)) ,v92[3])));v228=1053 -((2072 -(1117 + 98)) + 195) ;end end end if (((3214 + 882)>((446 -247) + 722)) and (2==v158)) then for v246=v159,v80 do local v247=0 + 0 ;local v248;while true do if ((v247==(0 + 0)) or ((934 -447)>=(4658 -(210 + 646)))) then v248=0 + 0 + 0 ;while true do if ((v248==(0 -0)) or ((6543 -(1258 + 576))<((13995 -8421) -3465))) then v162=v162 + 1 + 0 ;v90[v246]=v160[v162];break;end end break;end end end break;end if ((v158==(1 + 0)) or ((1741 + 481)>=((5197 -(275 + 1532)) -(30 + 1013)))) then v80=(v161 + v159) -(1434 -(856 + 577)) ;v162=0 + 0 ;v158=2;end end end elseif ((v93<=(10 + 1)) or ((2893 -(455 + 606))==(437 -(613 -366)))) then if (((2725 -(82 + (405 -142)))>=606) and (v93<=(8 + 1))) then if (((5725 -3567)<=3498) and (v93>8)) then local v163=v92[2];local v164=v92[4];local v165=v163 + ((22 -13) -7) ;local v166={v90[v163](v90[v163 + 1 + 0 ],v90[v165])};for v207=4 -3 ,v164 do v90[v165 + v207 ]=v166[v207];end local v167=v166[1090 -(178 + 911) ];if ((3929==((5407 + 4735) -6213)) and v167) then local v211=0 + 0 ;local v212;while true do if ((v211==(1721 -(303 + 1418))) or ((377 + 60)>=1729)) then v212=0 -0 ;while true do if (((5831 -(1268 + 85))>=(1644 + 230)) and ((0 + 0)==v212)) then v90[v165]=v167;v79=v92[(411 + 107) -(318 + 197) ];break;end end break;end end else v79=v79 + 1 + 0 ;end else v79=v92[2 + 1 ];end elseif ((((653 -(242 + 233)) + 361)<=(2059 -(255 + 1099))) and (v93>(8 + 2))) then local v169=0 -(0 -0) ;local v170;local v171;while true do if (((1791 -(460 + 946))<728) and (v169==(1 + 0))) then v90[v170 + 1 + 0 ]=v171;v90[v170]=v171[v92[4]];break;end if ((v169==(0 -0)) or ((965 -502)>(971 + 1173))) then local v232=1961 -(1805 + 156) ;while true do if ((v232==1) or ((2718 + 671)<=((16737 -11523) -2268))) then v169=1;break;end if (((14159 -9327)>(8652 -6324)) and (v232==(1754 -(555 + 1199)))) then v170=v92[2];v171=v90[v92[14 -11 ]];v232=1;end end end end elseif (((918 -(325 + 90))<=(2170 + 232 + 1400)) and (v90[v92[3 -1 ]]==v92[6 -2 ])) then v79=v79 + (3 -2) ;else v79=v92[1 + 2 ];end elseif ((v93<=(2 + 11)) or ((4841 -2344)<(3772 -(919 + 1075)))) then if (((4623 -(733 + 562))>=3168) and (v93==(1177 -(89 + 1076)))) then if ((v90[v92[1 + (1932 -(1236 + 695)) ]]~=v90[v92[4]]) or (358>2396)) then v79=v79 + (975 -(858 + 116)) ;else v79=v92[12 -9 ];end else local v172=0 -0 ;local v173;local v174;while true do if ((v172==(1 + 0)) or ((2900 -1301)>(2213 + 1007))) then while true do if ((v173==0) or ((4738 -(225 + 1767))>=(1540 + 3061))) then v174=v92[1 + 1 ];v90[v174]=v90[v174](v90[v174 + (1 -0) ]);break;end end break;end if ((4877>=(2436 -(314 + (1331 -984)))) and (v172==(952 -(909 + 43)))) then v173=0 + 0 ;v174=nil;v172=1;end end end elseif ((v93<=(52 -(1374 -(347 + 989)))) or ((1225 -(21 + 1117))>=2345)) then v90[v92[1364 -(848 + 514) ]][v92[6 -3 ]]=v90[v92[(640 -437) -(160 + 18 + 21) ]];elseif (((12500 -8199)>(342 + 2395)) and (v93>(1190 -(522 + 653)))) then local v215=0 -0 ;local v216;local v217;while true do if ((v215==(0 -0)) or (2126>(16389 -12062))) then v216=0 + 0 ;v217=nil;v215=1556 -(317 + 1238) ;end if (((4447 -(205 + 72))==(14916 -10746)) and (v215==1)) then while true do if (((219 + 909)==1128) and (v216==(0 -0))) then v217=v92[1895 -(500 + 1393) ];v90[v217](v13(v90,v217 + 1 + 0 ,v92[(17 -7) -7 ]));break;end end break;end end else do return;end end elseif (((2896 -(1684 + 162))<(1654 + 732)) and (v93<=(2 + 22))) then if ((v93<=((831 + 453) -(490 + 774))) or (((2980 -(898 + 132)) -(12 + 815))<(36 + 159))) then if ((v93<=18) or ((641 -(212 -36))==2437)) then if (((1385 + 2197)==(3919 -(230 + 107))) and (v93>(624 -(88 + 519)))) then v90[v92[2 + (0 -0) ]]={};else v90[v92[1 + 1 ]]=v92[703 -(604 + 96) ]~=(0 -0) ;end elseif (((7022 -3091)>(1032 + 1900)) and (v93==19)) then v90[v92[(936 -(268 + 331)) -(107 + 228) ]]=v29(v85[v92[1511 -(959 + 549) ]],nil,v64);else local v180=0 -0 ;local v181;while true do if (((3227 -(933 + 654))>=(2825 -2097)) and ((0 -0)==v180)) then v181=v92[(583 + 441) -(237 + 785) ];do return v13(v90,v181,v181 + v92[3] );end break;end end end elseif (((1009 -(442 + 565))<=(6675 -3698)) and (v93<=((3286 -(916 + 375)) -(1164 + 574 + 235)))) then if ((3706<(5954 -(722 + 318))) and (v93>21)) then v90[v92[2]][v92[1 + 0 + 2 ]]=v92[10 -6 ];elseif (((533 + 61)==(367 + 227)) and (v92[2 + 0 ]<v90[v92[16 -12 ]])) then v79=v79 + (644 -(120 + 523)) ;else v79=v92[3];end elseif ((2137<=(3192 + 1505)) and (v93>((677 -(369 + 237)) -48))) then local v184=0;local v185;local v186;while true do if (((4736 + 13)>861) and (v184==(3 -2))) then while true do if (((12446 -9106)==((22313 -17174) -(1517 + 282))) and (v185==0)) then v186=v92[1107 -(451 + 654) ];v90[v186]=v90[v186](v13(v90,v186 + (1 -0) ,v92[3]));break;end end break;end if ((4366>(13096 -9815)) and (v184==(893 -(547 + 346)))) then v185=0;v186=nil;v184=1 + 0 ;end end else local v187=0 + 0 ;local v188;while true do if ((v187==(0 -0)) or ((51 + 2434)<(321 + 400))) then v188=v92[1 + 1 ];v90[v188](v90[v188 + 1 ]);break;end end end elseif (((8368 -5003)<=(902 + 3132)) and (v93<=(109 -81))) then if ((1634==(1712 -(44 + 33 + 1))) and (v93<=(12 + 14))) then if ((v93==(17 + 8)) or ((1707 -(23 + 622))==(8916 -6118))) then v90[v92[1299 -(601 + 331 + 365) ]]=v64[v92[3]];else v90[v92[286 -(46 + 238) ]]=v92[3 + 0 ];end elseif (((11560 -7479)>(1813 -775)) and (v93==(1554 -(1234 + 293)))) then if (((1880 -1392)<=(6896 -4786)) and (v92[2]==v90[v92[1728 -(1258 + 466) ]])) then v79=v79 + (3 -2) ;else v79=v92[(1402 + 209) -(1160 + 448) ];end else v90[v92[4 -(6 -4) ]]=v90[v92[8 -(2 + 3) ]];end elseif ((v93<=(26 + 4)) or ((1450 -(2044 -(882 + 657)))==(3071 + 1460))) then if ((v93==((42 + 52) -65)) or ((1379 + 481)>=3813)) then v90[v92[1306 -(903 + 401) ]]=v90[v92[4 -(1 + 0) ]][v92[4]];else local v197=0 + 0 ;local v198;local v199;local v200;while true do if ((836==(1296 -(408 + 52))) and (v197==2)) then for v249=1,v92[(675 -(672 + 2)) + 3 ] do local v250=0 -0 ;local v251;local v252;local v253;while true do if ((v250==1) or (2174<=(1372 -(495 + (1472 -(258 + 1124)))))) then v253=nil;while true do if ((406<(8014 -4524)) and (v251==(0 -0))) then v252=558 -((106 -62) + 514) ;v253=nil;v251=1 + 0 ;end if (((3844 -(603 + 1002))>(2197 + 6)) and (v251==(4 -3))) then while true do if ((v252==(0 + 0)) or ((5198 -(351 + 399))<1283)) then local v300=0 + 0 + 0 ;while true do if (((5791 -(841 + 366))<(22088 -17114)) and (v300==(0 -0))) then local v315=701 -((966 -492) + 227) ;while true do if ((v315==(0 -(0 -0))) or ((10964 -6944)<=(2950 -(474 + 901)))) then v79=v79 + (1448 -(805 + 642)) ;v253=v84[v79];v315=1 + 0 ;end if ((v315==(1 + 0)) or ((4 + 59)>(4622 -2635))) then v300=2 -1 ;break;end end end if ((v300==(1 + 0)) or (2160==(9587 -5082))) then v252=1 + 0 ;break;end end end if ((v252==1) or (698>=(363 + 3242))) then if ((206<(11306 -8427)) and (v253[1 + 0 ]==28)) then v200[v249-(1 + 0) ]={v90,v253[2 + 1 ]};else v200[v249-(1 -0) ]={v63,v253[1994 -(1103 + 645 + 243) ]};end v89[ #v89 + (4 -3) ]=v200;break;end end break;end end break;end if ((v250==(0 + 0)) or ((4033 -1621)<(646 + 1406))) then v251=0 + 0 ;v252=nil;v250=(1985 -(365 + 47)) -(381 + 1191) ;end end end v90[v92[2 + 0 ]]=v29(v198,v199,v64);break;end if (((2148 -(313 + 4))<2442) and (v197==(85 -(27 + 57)))) then local v236=0 -0 ;while true do if ((v236==(1445 -(560 + 885))) or ((1575 + 3115)>=((2689 + 3325) -1125))) then v200={};v199=v10({},{__index=function(v263,v264)local v265=0 -(0 + 0) ;local v266;while true do if ((v265==(1081 -(806 + (638 -363)))) or ((9788 -6578)>=4550)) then v266=v200[v264];return v266[836 -(641 + 194) ][v266[7 -5 ]];end end end,__newindex=function(v267,v268,v269)local v270=0 + 0 ;local v271;while true do if ((v270==0) or ((6667 -(903 + 890))<(2277 -(707 + 140)))) then v271=v200[v268];v271[1 + 0 ][v271[286 -(230 + 54) ]]=v269;break;end end end});v236=1 + 0 + 0 ;end if (((3460 -(1502 + 173))<(5730 -2781)) and ((499 -(79 + 43 + 376))==v236)) then v197=921 -(791 + 128) ;break;end end end if ((v197==(1282 -(292 + 990))) or (1411<=544)) then local v237=0;while true do if (((1927 + 2387)>=4036) and (v237==(0 + 0))) then v198=v85[v92[5 -2 ]];v199=nil;v237=1 -0 ;end if ((v237==(1 + 0)) or ((3356 -(597 + 45))>(4092 -(5 + (195 -61))))) then v197=1 -0 ;break;end end end end end elseif ((v93<=(1331 -(403 + 897))) or ((41 + 598)>(1596 + 1900))) then local v201=0;local v202;local v203;local v204;while true do if ((((15167 + 6723) -17122)>=(6365 -(721 + 1179))) and (v201==(1 + 0))) then v204=nil;while true do if ((v202==1) or ((5802 -(713 + 529))<=(485 + 2379))) then while true do if ((v203==(476 -(148 + 328))) or ((8552 -6754)<1110)) then v204=v92[837 -(415 + 420) ];v90[v204](v13(v90,v204 + 1 + 0 ,v80));break;end end break;end if (((4855 -(481 + 35))>(337 + 2443)) and (v202==0)) then v203=0 -(0 + 0) ;v204=nil;v202=1 -0 ;end end break;end if (((6083 -(1669 + 252))>=((1947 + 500) -(76 + 4 + 28))) and (v201==(349 -(123 + 226)))) then v202=439 -(54 + 383 + 2) ;v203=nil;v201=1;end end elseif ((v93>32) or ((14561 -11366)==(10804 -8057))) then local v220=0;local v221;local v222;local v223;local v224;while true do if (((2 -0)==v220) or (4411<=(5132 -2264))) then while true do if ((v221==(1218 -(118 + 1100))) or (3158>=(5739 -(1332 + 134 + 108)))) then v222=v92[3 -1 ];v223={v90[v222](v13(v90,v222 + (2 -1) ,v80))};v221=4 -3 ;end if ((v221==1) or ((2214 -((2763 -2135) + (325 -154)))>=((5666 -(152 + 885)) -(1135 + 92)))) then v224=0 -0 ;for v282=v222,v92[2 + 2 ] do local v283=0 -0 ;local v284;local v285;while true do if ((3208>=(4213 -(1419 + 50))) and (v283==(2 -1))) then while true do if ((v284==(1853 -(1267 + 586))) or ((220 + 4262)<(70 + 2158))) then v285=722 -(612 + 110) ;while true do if ((2711>(4738 -3454)) and (v285==(445 -(9 + 436)))) then v224=v224 + (1 -0) ;v90[v282]=v223[v224];break;end end break;end end break;end if ((v283==(1723 -(266 + 1457))) or ((6288 -2412)<(2846 -(93 + 7)))) then v284=0 -0 ;v285=nil;v283=327 -(258 + 68) ;end end end break;end end break;end if ((v220==(1 + 0)) or (((5979 + 6570) -7809)<=(3464 -(820 + 38)))) then v223=nil;v224=nil;v220=(949 -711) -(127 + 70 + 39) ;end if (((1938 -(613 + 242))<(6360 -3407)) and (v220==(0 + 0))) then v221=0;v222=nil;v220=4 -3 ;end end else do return v90[v92[2]];end end v79=v79 + (1 -0) ;break;end end break;end end end end A,B=v27(v11(v83));if  not A[1] then local v99=0;local v100;while true do if (v99==0) then v100=v62[4][v79] or "?" ;error("Script error at ["   .. v100   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end if (v65==0) then v66=v62[1];v67=v62[2];v65=1;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
